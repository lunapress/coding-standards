<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Onepix WP Standard" namespace="WpOnepixStandard" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/PHPCSStandards/PHP_CodeSniffer/master/phpcs.xsd">

    <description>Onepix WordPress Coding Standards</description>

    <rule ref="WordPress">
        <exclude name="WordPress.PHP.DisallowShortTernary.Found"/>

        <exclude name="WordPress.Files.FileName"/>

        <exclude name="WordPress.Security.NonceVerification.Recommended"/>

        <!-- Rule does not work with custom functions for verification -->
        <exclude name="WordPress.Security.NonceVerification.Missing"/>

        <exclude name="WordPress.Security.SafeRedirect.wp_redirect_wp_redirect"/>

        <exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing"/>

        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundAfterLastUsed"/>

        <exclude name="Universal.Operators.DisallowShortTernary.Found"/>

        <exclude name="WordPress.Security.EscapeOutput.ExceptionNotEscaped"/>

        <!-- Allow not yoda conditions -->
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>

        <!-- Allow short array syntax -->
        <exclude name="Universal.Arrays.DisallowShortArraySyntax.Found"/>

        <exclude name="Squiz.PHP.CommentedOutCode.Found"/>

        <!-- Disable mandatory commenting on anything and everything -->
        <exclude name="Squiz.Commenting"/>
        <exclude name="Generic.Commenting"/>

        <!-- Allow reserved keywords as parameter names -->
        <exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames"/>

        <!-- Allow error logging -->
        <exclude name="WordPress.PHP.DevelopmentFunctions.error_log_error_log"/>

        <!--    The project will not be published in the WP repository. Therefore, we donâ€™t have to worry about these errors.    -->
        <exclude name="WordPress.Security.EscapeOutput.OutputNotEscaped"/>
        <exclude name="WordPress.Security.EscapeOutput.HeredocOutputNotEscaped"/>
        <exclude name="WordPress.PHP.DontExtract.extract_extract"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.MissingUnslash"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotValidated"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotSanitized"/>

        <!--   Disable WordPress rules that don't comply with PSR-12     -->
        <exclude name="Generic.Functions"/>
        <exclude name="Squiz.Functions"/>

        <exclude name="Generic.WhiteSpace"/>
        <exclude name="Universal.WhiteSpace"/>
        <exclude name="WordPress.WhiteSpace"/>

        <exclude name="Generic.Classes"/>
        <exclude name="Universal.Classes"/>

        <exclude name="WordPress.Arrays"/>
        <exclude name="NormalizedArrays"/>

        <exclude name="WordPress.NamingConventions"/>
        <exclude name="PEAR"/>
    </rule>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <rule ref="PSR12"/>

    <!-- Return the bracket to the class with a new line -->
    <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceNewLine">
        <severity>5</severity>
    </rule>
    <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceWrongLine">
        <severity>5</severity>
    </rule>

    <!-- Allow ABSPATH verification -->
    <rule ref="PSR1.Files.SideEffects">
        <severity>0</severity>
    </rule>

    <!-- Arguments -->
    <arg name="extensions" value="php" />
    <arg name="report" value="summary" />
    <arg name="colors" />
    <arg name="cache" />
    <arg value="sp" />
    <exclude-pattern>*/psalm/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
</ruleset>